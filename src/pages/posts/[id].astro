---
import GameInfo from "../../components/GameInfo"
import GamePicture from "../../components/GamePicture"
import GameStatusCard from "../../components/GameStatusCard"
import AdminSettings from "../../components/AdminSettings"
import CommentInput from "../../components/CommentInput"
import Layout from "../../layouts/Layout.astro"
import { getPostById, getPostDetailsById } from "../../db/prisma/queries"
import { getUser } from "../../db/supabase/supabase"

const user = await getUser(Astro.request)

console.log(user)

if (!user) {
  return Astro.redirect("/auth")
}

const { id } = Astro.params
const postId = parseInt(id!)
const post = await getPostById(postId)
const details = await getPostDetailsById(postId)
---

<Layout>
  {
    post && (
      <>
        <div class="flex flex-col mb-[39px] gap-[17px]">
          <div class="flex flex-row gap-[10px]">
            <GamePicture
              postId={post.id}
              userId={user.id}
              likes={post.likes}
              client:load
            />
            <GameInfo
              title={post.title}
              type={post.type}
              rules={["3min", "Points", "5-check", "8th=QBRN"]}
              rules={post.gamerules.map((rule) => rule.ruleType.name)}
              user={post.author.name}
              createdAt={post.createdAt}
              description={post.description}
              variantLink={`/${post.id}`}
            />
          </div>

          {details && user.role === "TESTER" && (
            <AdminSettings user={user} details={details} client:load />
          )}
          {user.role == "TESTER" ? (
            <GameStatusCard
              displayEditBotton={true}
              postId={post.id}
              verdict={post.verdict}
              status={post.status}
              client:load
            />
          ) : (
            <GameStatusCard
              displayEditBotton={false}
              postId={post.id}
              verdict={post.verdict}
              status={post.status}
            />
          )}
        </div>
        <CommentInput />
      </>
    )
  }
</Layout>
