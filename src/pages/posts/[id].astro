---
import GameInfo from "../../components/GameInfo"
import GamePicture from "../../components/GamePicture"
import GameStatusCard from "../../components/GameStatusCard"
import AdminSettings from "../../components/AdminSettings"
import Comments from "../../components/Comments"
import Layout from "../../layouts/Layout.astro"
import { getPostById, getPostDetailsById } from "../../db/prisma/queries"
import { getUser } from "../../db/supabase/supabase"
import Navigation from "../../components/Navigation"

const user = await getUser(Astro.request)

console.log(user)

if (!user) {
  return Astro.redirect("/auth")
}

const { id } = Astro.params
const postId = parseInt(id!)
const post = await getPostById(postId)
const details = await getPostDetailsById(postId)
const userIsTester = user.role == "TESTER"

console.log(post)
---

<Layout>
  <Navigation username={user.username} />
  {
    post && (
      <>
        <div class="flex flex-col mb-[40px] gap-[17px]">
          <div class="flex flex-row gap-[10px]">
            <GamePicture
              postId={post.id}
              userId={user.id}
              likes={post.UserLikedPosts}
              client:load
            />
            {userIsTester ? (
              <GameInfo
                postId={post.id}
                title={post.title}
                type={post.type}
                rules={["3min", "Points", "5-check", "8th=QBRN"]}
                rules={post.gamerules.map((rule) => rule.name)}
                user={post.author.name}
                createdAt={post.createdAt}
                description={post.description}
                variantLink={`/${post.id}`}
                client:only
              />
            ) : (
              <GameInfo
                postId={post.id}
                title={post.title}
                type={post.type}
                rules={["3min", "Points", "5-check", "8th=QBRN"]}
                rules={post.gamerules.map((rule) => rule.name)}
                user={post.author.name}
                createdAt={post.createdAt}
                description={post.description}
                variantLink={`${post.variantLink}`}
              />
            )}
          </div>

          {details && userIsTester && (
            <AdminSettings user={user} details={details} client:only />
          )}
          {userIsTester ? (
            <GameStatusCard
              displayEditBotton={true}
              postId={post.id}
              verdict={post.verdict}
              status={post.status}
              client:only
            />
          ) : (
            <GameStatusCard
              displayEditBotton={false}
              postId={post.id}
              verdict={post.verdict}
              status={post.status}
            />
          )}
        </div>
        <Comments userId={user.id} postId={post.id} comments={post.comments} client:only />
      </>
    )
  }
</Layout>
